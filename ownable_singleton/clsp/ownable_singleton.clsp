(mod (OWNER_PUBKEY INNER_PUZZLE_HASH Truths new_inner_puzzle_hash)

  (include condition_codes.clib)
  (include singleton_truths.clib)
  (include curry_and_treehash.clib)

  ; takes a lisp tree and returns the hash of it
  (defun sha256tree (TREE)
      (if (l TREE)
          (sha256 2 (sha256tree (f TREE)) (sha256tree (r TREE)))
          (sha256 1 TREE)
      )
  )

  (defun-inline create_ownable_puzhash (INNER_PUZZLE_HASH new_owner_pubkey)
    (puzzle-hash-of-curried-function INNER_PUZZLE_HASH (sha256 INNER_PUZZLE_HASH) (sha256 new_owner_pubkey))
  )

  (defun-inline change_owner (OWNER_PUBKEY OWNABLE_PUZZLE_HASH my_amount new_inner_puzzle_hash)
    (list (list AGG_SIG_ME OWNER_PUBKEY new_owner_pubkey)
          (list CREATE_COIN new_inner_puzzle_hash my_amount)
    )
  )

  ; main
  (if new_owner_pubkey
    (change_owner OWNER_PUBKEY INNER_PUZZLE_HASH (my_amount_truth Truths) new_inner_puzzle_hash)
    (x "no pubkey")
  )
)
